// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
	"workblok/ent/block"
	"workblok/ent/user"
	"workblok/ent/verificationcode"
	"workblok/schema"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	blockMixin := schema.Block{}.Mixin()
	blockMixinFields0 := blockMixin[0].Fields()
	_ = blockMixinFields0
	blockFields := schema.Block{}.Fields()
	_ = blockFields
	// blockDescCreationDate is the schema descriptor for creationDate field.
	blockDescCreationDate := blockMixinFields0[1].Descriptor()
	// block.DefaultCreationDate holds the default value on creation for the creationDate field.
	block.DefaultCreationDate = blockDescCreationDate.Default.(func() time.Time)
	// blockDescTargetMinutes is the schema descriptor for targetMinutes field.
	blockDescTargetMinutes := blockFields[1].Descriptor()
	// block.DefaultTargetMinutes holds the default value on creation for the targetMinutes field.
	block.DefaultTargetMinutes = blockDescTargetMinutes.Default.(int)
	// blockDescDistractionMinutes is the schema descriptor for distractionMinutes field.
	blockDescDistractionMinutes := blockFields[2].Descriptor()
	// block.DefaultDistractionMinutes holds the default value on creation for the distractionMinutes field.
	block.DefaultDistractionMinutes = blockDescDistractionMinutes.Default.(int)
	// blockDescID is the schema descriptor for id field.
	blockDescID := blockMixinFields0[0].Descriptor()
	// block.DefaultID holds the default value on creation for the id field.
	block.DefaultID = blockDescID.Default.(func() uuid.UUID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreationDate is the schema descriptor for creationDate field.
	userDescCreationDate := userMixinFields0[1].Descriptor()
	// user.DefaultCreationDate holds the default value on creation for the creationDate field.
	user.DefaultCreationDate = userDescCreationDate.Default.(func() time.Time)
	// userDescUsername is the schema descriptor for Username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "Username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for Email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for Password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "Password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescEmailValid is the schema descriptor for EmailValid field.
	userDescEmailValid := userFields[3].Descriptor()
	// user.DefaultEmailValid holds the default value on creation for the EmailValid field.
	user.DefaultEmailValid = userDescEmailValid.Default.(bool)
	// userDescTutorialCompleted is the schema descriptor for TutorialCompleted field.
	userDescTutorialCompleted := userFields[5].Descriptor()
	// user.DefaultTutorialCompleted holds the default value on creation for the TutorialCompleted field.
	user.DefaultTutorialCompleted = userDescTutorialCompleted.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
	verificationcodeMixin := schema.VerificationCode{}.Mixin()
	verificationcodeMixinFields0 := verificationcodeMixin[0].Fields()
	_ = verificationcodeMixinFields0
	verificationcodeFields := schema.VerificationCode{}.Fields()
	_ = verificationcodeFields
	// verificationcodeDescCreationDate is the schema descriptor for creationDate field.
	verificationcodeDescCreationDate := verificationcodeMixinFields0[1].Descriptor()
	// verificationcode.DefaultCreationDate holds the default value on creation for the creationDate field.
	verificationcode.DefaultCreationDate = verificationcodeDescCreationDate.Default.(func() time.Time)
	// verificationcodeDescType is the schema descriptor for type field.
	verificationcodeDescType := verificationcodeFields[0].Descriptor()
	// verificationcode.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	verificationcode.TypeValidator = verificationcodeDescType.Validators[0].(func(string) error)
	// verificationcodeDescCode is the schema descriptor for code field.
	verificationcodeDescCode := verificationcodeFields[1].Descriptor()
	// verificationcode.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	verificationcode.CodeValidator = verificationcodeDescCode.Validators[0].(func(string) error)
	// verificationcodeDescID is the schema descriptor for id field.
	verificationcodeDescID := verificationcodeMixinFields0[0].Descriptor()
	// verificationcode.DefaultID holds the default value on creation for the id field.
	verificationcode.DefaultID = verificationcodeDescID.Default.(func() uuid.UUID)
}
